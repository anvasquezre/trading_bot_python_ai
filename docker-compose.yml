version: "3.8"

services:
  timescale:
    image: timescale/timescaledb-ha:pg14-latest
    restart: unless-stopped
    command: postgres -c 'max_connections=2000'
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - timescale:/var/lib/postgresql/data

  data_preloader:
    restart: no
    build:
      context: ./data_preloader
      dockerfile: Dockerfile
      target: build
    depends_on:
      db_healthcheck:
        condition: service_completed_successfully

  db_healthcheck:
    restart: no
    build:
      context: ./data_preloader
      dockerfile: Dockerfile
      target: healthcheck
    depends_on:
      timescale:
        condition: service_started

  sentiment_service:
    restart: unless-stopped
    build:
      context: ./sentiment_service
      dockerfile: Dockerfile
    depends_on:
      timescale:
        condition: service_started
      data_preloader:
        condition: service_completed_successfully

  data_fetcher:
    restart: unless-stopped
    build:
      context: ./data_fetcher
      dockerfile: Dockerfile
    depends_on:
      timescale:
        condition: service_started
      data_preloader:
        condition: service_completed_successfully

  model:
    restart: unless-stopped
    build:
      context: ./model
      dockerfile: Dockerfile
    depends_on:
      timescale:
        condition: service_started
      data_preloader:
        condition: service_completed_successfully

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

volumes:
  dbdata6: 
  timescale:


